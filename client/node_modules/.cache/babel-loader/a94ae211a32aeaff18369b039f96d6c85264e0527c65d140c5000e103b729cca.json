{"ast":null,"code":"var _jsxFileName = \"/Users/sashanksingh/Desktop/Headstarter/Spend-Ruby/ruby-track/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Container, Paper } from '@mui/material';\nimport io from 'socket.io-client';\nimport TransactionHistory from './TransactionHistory';\nimport SpendingCategories from './SpendingCategories';\nimport BudgetTracking from './BudgetTracking';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    const socket = io('http://localhost:4000'); // Adjust this if your server runs on a different port\n\n    socket.on('newTransaction', newTransaction => {\n      setTransactions(prevTransactions => [newTransaction, ...prevTransactions]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      style: {\n        margin: '20px 0',\n        textAlign: 'center'\n      },\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionHistory, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpendingCategories, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BudgetTracking, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Container","Paper","io","TransactionHistory","SpendingCategories","BudgetTracking","jsxDEV","_jsxDEV","Dashboard","_s","transactions","setTransactions","socket","on","newTransaction","prevTransactions","disconnect","component","children","variant","style","margin","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sashanksingh/Desktop/Headstarter/Spend-Ruby/ruby-track/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Container, Paper } from '@mui/material';\nimport io from 'socket.io-client';\nimport TransactionHistory from './TransactionHistory';\nimport SpendingCategories from './SpendingCategories';\nimport BudgetTracking from './BudgetTracking';\n\nconst Dashboard = () => {\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    const socket = io('http://localhost:4000'); // Adjust this if your server runs on a different port\n\n    socket.on('newTransaction', (newTransaction) => {\n      setTransactions((prevTransactions) => [newTransaction, ...prevTransactions]);\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  return (\n    <Container component=\"main\">\n      <Typography variant=\"h4\" style={{ margin: '20px 0', textAlign: 'center' }}>\n        Dashboard\n      </Typography>\n      <TransactionHistory transactions={transactions} />\n      <SpendingCategories transactions={transactions} />\n      <BudgetTracking transactions={transactions} />\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,SAAS,EAAEC,KAAK,QAAQ,eAAe;AAC5D,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMc,MAAM,GAAGV,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;IAE5CU,MAAM,CAACC,EAAE,CAAC,gBAAgB,EAAGC,cAAc,IAAK;MAC9CH,eAAe,CAAEI,gBAAgB,IAAK,CAACD,cAAc,EAAE,GAAGC,gBAAgB,CAAC,CAAC;IAC9E,CAAC,CAAC;IAEF,OAAO,MAAM;MACXH,MAAM,CAACI,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAACP,SAAS;IAACiB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACzBX,OAAA,CAACR,UAAU;MAACoB,OAAO,EAAC,IAAI;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAJ,QAAA,EAAC;IAE3E;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbnB,OAAA,CAACJ,kBAAkB;MAACO,YAAY,EAAEA;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDnB,OAAA,CAACH,kBAAkB;MAACM,YAAY,EAAEA;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDnB,OAAA,CAACF,cAAc;MAACK,YAAY,EAAEA;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEhB,CAAC;AAACjB,EAAA,CAzBID,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA2Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}