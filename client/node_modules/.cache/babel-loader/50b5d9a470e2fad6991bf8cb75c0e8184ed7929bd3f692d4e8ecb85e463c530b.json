{"ast":null,"code":"var _jsxFileName = \"/Users/sashanksingh/Desktop/Headstarter/Spend-Ruby/ruby-track/client/src/components/TransactionHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Paper, List, ListItem, ListItemText } from '@mui/material';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000'); // Adjust the URL if your server is running elsewhere\n\nconst groupByDate = transactions => {\n  return transactions.reduce((groups, transaction) => {\n    const date = transaction.date;\n    if (!groups[date]) {\n      groups[date] = [];\n    }\n    groups[date].push(transaction);\n    return groups;\n  }, {});\n};\nconst TransactionHistory = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    // Fetch initial transactions\n    fetch('http://localhost:4000/api/transactions').then(response => response.json()).then(data => setTransactions(data)).catch(error => console.error('Error fetching transactions:', error));\n\n    // Listen for new transactions\n    socket.on('newTransaction', newTransaction => {\n      setTransactions(prevTransactions => [newTransaction, ...prevTransactions]);\n    });\n\n    // Cleanup the event listener on unmount\n    return () => {\n      socket.off('newTransaction');\n    };\n  }, []);\n  const groupedTransactions = groupByDate(transactions);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    style: {\n      padding: '20px',\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), Object.keys(groupedTransactions).map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          marginTop: '10px',\n          marginBottom: '5px',\n          fontWeight: 'bold'\n        },\n        children: new Date(date).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        children: groupedTransactions[date].map(transaction => /*#__PURE__*/_jsxDEV(ListItem, {\n          style: {\n            paddingTop: '0',\n            paddingBottom: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${transaction.description} - $${transaction.amount}`,\n            secondary: `${new Date(transaction.date).toLocaleDateString()} | ${transaction.category}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionHistory, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = TransactionHistory;\nexport default TransactionHistory;\nvar _c;\n$RefreshReg$(_c, \"TransactionHistory\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Paper","List","ListItem","ListItemText","io","jsxDEV","_jsxDEV","socket","groupByDate","transactions","reduce","groups","transaction","date","push","TransactionHistory","_s","setTransactions","fetch","then","response","json","data","catch","error","console","on","newTransaction","prevTransactions","off","groupedTransactions","elevation","style","padding","marginBottom","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","marginTop","fontWeight","Date","toLocaleDateString","dense","paddingTop","paddingBottom","primary","description","amount","secondary","category","id","_c","$RefreshReg$"],"sources":["/Users/sashanksingh/Desktop/Headstarter/Spend-Ruby/ruby-track/client/src/components/TransactionHistory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Paper, List, ListItem, ListItemText } from '@mui/material';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:4000');  // Adjust the URL if your server is running elsewhere\n\nconst groupByDate = (transactions) => {\n  return transactions.reduce((groups, transaction) => {\n    const date = transaction.date;\n    if (!groups[date]) {\n      groups[date] = [];\n    }\n    groups[date].push(transaction);\n    return groups;\n  }, {});\n};\n\nconst TransactionHistory = () => {\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    // Fetch initial transactions\n    fetch('http://localhost:4000/api/transactions')\n      .then((response) => response.json())\n      .then((data) => setTransactions(data))\n      .catch((error) => console.error('Error fetching transactions:', error));\n\n    // Listen for new transactions\n    socket.on('newTransaction', (newTransaction) => {\n      setTransactions((prevTransactions) => [newTransaction, ...prevTransactions]);\n    });\n\n    // Cleanup the event listener on unmount\n    return () => {\n      socket.off('newTransaction');\n    };\n  }, []);\n\n  const groupedTransactions = groupByDate(transactions);\n\n  return (\n    <Paper elevation={3} style={{ padding: '20px', marginBottom: '20px' }}>\n      <Typography variant=\"h6\" gutterBottom>\n        Transaction History\n      </Typography>\n      {Object.keys(groupedTransactions).map((date) => (\n        <div key={date} style={{ marginBottom: '10px' }}>\n          <Typography variant=\"subtitle1\" style={{ marginTop: '10px', marginBottom: '5px', fontWeight: 'bold' }}>\n            {new Date(date).toLocaleDateString()}\n          </Typography>\n          <List dense>\n            {groupedTransactions[date].map((transaction) => (\n              <ListItem key={transaction.id} style={{ paddingTop: '0', paddingBottom: '0' }}>\n                <ListItemText\n                  primary={`${transaction.description} - $${transaction.amount}`}\n                  secondary={`${new Date(transaction.date).toLocaleDateString()} | ${transaction.category}`}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      ))}\n    </Paper>\n  );\n};\n\nexport default TransactionHistory;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}