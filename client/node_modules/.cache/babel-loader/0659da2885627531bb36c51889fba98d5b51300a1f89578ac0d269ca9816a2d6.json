{"ast":null,"code":"var _jsxFileName = \"/Users/sashanksingh/Desktop/Headstarter/Spend-Ruby/ruby-track/client/src/components/TransactionHistory.js\";\nimport React from 'react';\nimport { Typography, Paper, List, ListItem, ListItemText } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transactions = [{\n  id: 1,\n  description: 'Grocery',\n  amount: -50,\n  date: '2024-08-18',\n  category: 'Food'\n}, {\n  id: 2,\n  description: 'Salary',\n  amount: 1500,\n  date: '2024-08-17',\n  category: 'Income'\n}, {\n  id: 3,\n  description: 'Electricity Bill',\n  amount: -75,\n  date: '2024-08-16',\n  category: 'Utilities'\n}];\nconst groupByDate = transactions => {\n  return transactions.reduce((groups, transaction) => {\n    const date = transaction.date;\n    if (!groups[date]) {\n      groups[date] = [];\n    }\n    groups[date].push(transaction);\n    return groups;\n  }, {});\n};\nconst TransactionHistory = () => {\n  const groupedTransactions = groupByDate(transactions);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    style: {\n      padding: '20px',\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), Object.keys(groupedTransactions).map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          marginTop: '10px',\n          marginBottom: '5px',\n          fontWeight: 'bold'\n        },\n        children: new Date(date).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        children: groupedTransactions[date].map(transaction => /*#__PURE__*/_jsxDEV(ListItem, {\n          style: {\n            paddingTop: '0',\n            paddingBottom: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${transaction.description} - $${transaction.amount}`,\n            secondary: `${new Date(transaction.date).toLocaleDateString()} | ${transaction.category}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = TransactionHistory;\nexport default TransactionHistory;\nvar _c;\n$RefreshReg$(_c, \"TransactionHistory\");","map":{"version":3,"names":["React","Typography","Paper","List","ListItem","ListItemText","jsxDEV","_jsxDEV","transactions","id","description","amount","date","category","groupByDate","reduce","groups","transaction","push","TransactionHistory","groupedTransactions","elevation","style","padding","marginBottom","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","marginTop","fontWeight","Date","toLocaleDateString","dense","paddingTop","paddingBottom","primary","secondary","_c","$RefreshReg$"],"sources":["/Users/sashanksingh/Desktop/Headstarter/Spend-Ruby/ruby-track/client/src/components/TransactionHistory.js"],"sourcesContent":["import React from 'react';\nimport { Typography, Paper, List, ListItem, ListItemText } from '@mui/material';\n\nconst transactions = [\n  { id: 1, description: 'Grocery', amount: -50, date: '2024-08-18', category: 'Food' },\n  { id: 2, description: 'Salary', amount: 1500, date: '2024-08-17', category: 'Income' },\n  { id: 3, description: 'Electricity Bill', amount: -75, date: '2024-08-16', category: 'Utilities' },\n];\n\nconst groupByDate = (transactions) => {\n  return transactions.reduce((groups, transaction) => {\n    const date = transaction.date;\n    if (!groups[date]) {\n      groups[date] = [];\n    }\n    groups[date].push(transaction);\n    return groups;\n  }, {});\n};\n\nconst TransactionHistory = () => {\n  const groupedTransactions = groupByDate(transactions);\n\n  return (\n    <Paper elevation={3} style={{ padding: '20px', marginBottom: '20px' }}>\n      <Typography variant=\"h6\" gutterBottom>\n        Transaction History\n      </Typography>\n      {Object.keys(groupedTransactions).map((date) => (\n        <div key={date} style={{ marginBottom: '10px' }}>\n          <Typography variant=\"subtitle1\" style={{ marginTop: '10px', marginBottom: '5px', fontWeight: 'bold' }}>\n            {new Date(date).toLocaleDateString()}\n          </Typography>\n          <List dense>\n            {groupedTransactions[date].map((transaction) => (\n              <ListItem key={transaction.id} style={{ paddingTop: '0', paddingBottom: '0' }}>\n                <ListItemText\n                  primary={`${transaction.description} - $${transaction.amount}`}\n                  secondary={`${new Date(transaction.date).toLocaleDateString()} | ${transaction.category}`}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      ))}\n    </Paper>\n  );\n};\n\nexport default TransactionHistory;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}