{"ast":null,"code":"var _jsxFileName = \"/Users/sashanksingh/Desktop/Headstarter/Spend-Ruby/ruby-track/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, TextField, Button, Typography, Paper, Snackbar } from \"@mui/material\";\nimport Alert from '@mui/material/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true); // Toggle between login and sign up\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const [open, setOpen] = useState(false);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      username,\n      password,\n      confirmPassword\n    } = credentials;\n    const url = isLogin ? 'http://localhost:4000/login' : 'http://localhost:4000/signup';\n    if (!isLogin && password !== confirmPassword) {\n      setError('Passwords do not match');\n      setOpen(true);\n      return;\n    }\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) throw new Error('Failed to fetch');\n      const data = await response.json();\n      console.log(data); // Handle the response accordingly\n    } catch (err) {\n      setError(err.message);\n      setOpen(true);\n    }\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      style: {\n        padding: 20,\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isLogin ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Username\",\n          variant: \"outlined\",\n          fullWidth: true,\n          required: true,\n          margin: \"normal\",\n          name: \"username\",\n          value: credentials.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          variant: \"outlined\",\n          type: \"password\",\n          fullWidth: true,\n          required: true,\n          margin: \"normal\",\n          name: \"password\",\n          value: credentials.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Confirm Password\",\n          variant: \"outlined\",\n          type: \"password\",\n          fullWidth: true,\n          required: true,\n          margin: \"normal\",\n          name: \"confirmPassword\",\n          value: credentials.confirmPassword,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            mt: 3\n          },\n          children: isLogin ? 'Login' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          color: \"secondary\",\n          sx: {\n            mt: 1\n          },\n          onClick: () => setIsLogin(!isLogin),\n          children: [\"Switch to \", isLogin ? 'Sign Up' : 'Login']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"Go+jCWiip2zS3ZARqcU56i9W4gA=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","Container","TextField","Button","Typography","Paper","Snackbar","Alert","jsxDEV","_jsxDEV","AuthForm","_s","isLogin","setIsLogin","credentials","setCredentials","username","password","confirmPassword","error","setError","open","setOpen","handleChange","event","name","value","target","prev","handleSubmit","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","err","message","handleClose","component","maxWidth","children","elevation","style","padding","marginTop","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","fullWidth","required","margin","onChange","type","color","sx","mt","onClick","autoHideDuration","onClose","severity","width","_c","$RefreshReg$"],"sources":["/Users/sashanksingh/Desktop/Headstarter/Spend-Ruby/ruby-track/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, TextField, Button, Typography, Paper, Snackbar } from \"@mui/material\";\nimport Alert from '@mui/material/Alert';\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);  // Toggle between login and sign up\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [error, setError] = useState('');\n  const [open, setOpen] = useState(false);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setCredentials(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const { username, password, confirmPassword } = credentials;\n    const url = isLogin ? 'http://localhost:4000/login' : 'http://localhost:4000/signup';\n\n    if (!isLogin && password !== confirmPassword) {\n      setError('Passwords do not match');\n      setOpen(true);\n      return;\n    }\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (!response.ok) throw new Error('Failed to fetch');\n\n      const data = await response.json();\n      console.log(data);  // Handle the response accordingly\n    } catch (err) {\n      setError(err.message);\n      setOpen(true);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper elevation={6} style={{ padding: 20, marginTop: 20 }}>\n        <Typography variant=\"h5\">{isLogin ? 'Login' : 'Sign Up'}</Typography>\n        <form onSubmit={handleSubmit}>\n          <TextField\n            label=\"Username\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            margin=\"normal\"\n            name=\"username\"\n            value={credentials.username}\n            onChange={handleChange}\n          />\n          <TextField\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n            fullWidth\n            required\n            margin=\"normal\"\n            name=\"password\"\n            value={credentials.password}\n            onChange={handleChange}\n          />\n          {!isLogin && (\n            <TextField\n              label=\"Confirm Password\"\n              variant=\"outlined\"\n              type=\"password\"\n              fullWidth\n              required\n              margin=\"normal\"\n              name=\"confirmPassword\"\n              value={credentials.confirmPassword}\n              onChange={handleChange}\n            />\n          )}\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" sx={{ mt: 3 }}>\n            {isLogin ? 'Login' : 'Sign Up'}\n          </Button>\n          <Button\n            fullWidth\n            color=\"secondary\"\n            sx={{ mt: 1 }}\n            onClick={() => setIsLogin(!isLogin)}\n          >\n            Switch to {isLogin ? 'Sign Up' : 'Login'}\n          </Button>\n        </form>\n      </Paper>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}