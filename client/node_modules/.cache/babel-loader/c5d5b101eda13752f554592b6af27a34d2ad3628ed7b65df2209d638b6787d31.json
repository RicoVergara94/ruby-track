{"ast":null,"code":"var _jsxFileName = \"/Users/sashanksingh/Desktop/Headstarter/Spend-Ruby/ruby-track/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography } from '@mui/material';\nimport TransactionHistory from './TransactionHistory';\nimport SpendingCategories from './SpendingCategories';\nimport BudgetTracking from './BudgetTracking';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nconst Dashboard = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [budget, setBudget] = useState(null);\n  useEffect(() => {\n    // Fetch initial transactions\n    const fetchTransactions = async () => {\n      const response = await fetch('http://localhost:4000/api/transactions');\n      const data = await response.json();\n      setTransactions(data);\n    };\n    const fetchBudget = async () => {\n      const response = await fetch('http://localhost:4000/api/budget');\n      const data = await response.json();\n      setBudget(data);\n    };\n    fetchTransactions();\n    fetchBudget();\n\n    // Listen for new transactions\n    socket.on('newTransaction', transaction => {\n      setTransactions(prevTransactions => [transaction, ...prevTransactions]);\n    });\n\n    // Cleanup on component unmount\n    return () => socket.off('newTransaction');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionHistory, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpendingCategories, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BudgetTracking, {\n      budget: budget,\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"r36frhpV9gYB1HRzg/w79LjUbDY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","TransactionHistory","SpendingCategories","BudgetTracking","io","jsxDEV","_jsxDEV","socket","Dashboard","_s","transactions","setTransactions","budget","setBudget","fetchTransactions","response","fetch","data","json","fetchBudget","on","transaction","prevTransactions","off","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sashanksingh/Desktop/Headstarter/Spend-Ruby/ruby-track/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, Typography } from '@mui/material';\nimport TransactionHistory from './TransactionHistory';\nimport SpendingCategories from './SpendingCategories';\nimport BudgetTracking from './BudgetTracking';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:4000');\n\nconst Dashboard = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [budget, setBudget] = useState(null);\n\n  useEffect(() => {\n    // Fetch initial transactions\n    const fetchTransactions = async () => {\n      const response = await fetch('http://localhost:4000/api/transactions');\n      const data = await response.json();\n      setTransactions(data);\n    };\n\n    const fetchBudget = async () => {\n      const response = await fetch('http://localhost:4000/api/budget');\n      const data = await response.json();\n      setBudget(data);\n    };\n\n    fetchTransactions();\n    fetchBudget();\n\n    // Listen for new transactions\n    socket.on('newTransaction', (transaction) => {\n      setTransactions((prevTransactions) => [transaction, ...prevTransactions]);\n    });\n\n    // Cleanup on component unmount\n    return () => socket.off('newTransaction');\n  }, []);\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        Dashboard\n      </Typography>\n      <TransactionHistory transactions={transactions} />\n      <SpendingCategories transactions={transactions} />\n      <BudgetTracking budget={budget} transactions={transactions} />\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AACrD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMI,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;MACtE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,eAAe,CAACM,IAAI,CAAC;IACvB,CAAC;IAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;MAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,SAAS,CAACI,IAAI,CAAC;IACjB,CAAC;IAEDH,iBAAiB,CAAC,CAAC;IACnBK,WAAW,CAAC,CAAC;;IAEb;IACAZ,MAAM,CAACa,EAAE,CAAC,gBAAgB,EAAGC,WAAW,IAAK;MAC3CV,eAAe,CAAEW,gBAAgB,IAAK,CAACD,WAAW,EAAE,GAAGC,gBAAgB,CAAC,CAAC;IAC3E,CAAC,CAAC;;IAEF;IACA,OAAO,MAAMf,MAAM,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA,CAACP,SAAS;IAAAyB,QAAA,gBACRlB,OAAA,CAACN,UAAU;MAACyB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbxB,OAAA,CAACL,kBAAkB;MAACS,YAAY,EAAEA;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDxB,OAAA,CAACJ,kBAAkB;MAACQ,YAAY,EAAEA;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDxB,OAAA,CAACH,cAAc;MAACS,MAAM,EAAEA,MAAO;MAACF,YAAY,EAAEA;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEhB,CAAC;AAACrB,EAAA,CAxCID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}